// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id             Int        @id @default(autoincrement())
  email          String     @unique
  password       String
  role           Role       @default(USER)
  points         Int        @default(0)
  orders         Order[]
  sentPoints     Transfer[] @relation("SentPoints")
  receivedPoints Transfer[] @relation("ReceivedPoints")
  profileImage   String?
  createdAt      DateTime   @default(now())
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  price       Float
  imageUrl    String?
  deletedAt   DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  orders      Order[]
}

model Order {
  id        Int      @id @default(autoincrement())
  userId    Int
  productId Int
  quantity  Int
  createdAt DateTime @default(now())

  user    User    @relation(fields: [userId], references: [id])
  product Product @relation(fields: [productId], references: [id])
}

model Transfer {
  id         Int      @id @default(autoincrement())
  fromUserId Int
  toUserId   Int
  amount     Int
  createdAt  DateTime @default(now())

  fromUser User @relation("SentPoints", fields: [fromUserId], references: [id])
  toUser   User @relation("ReceivedPoints", fields: [toUserId], references: [id])
}
